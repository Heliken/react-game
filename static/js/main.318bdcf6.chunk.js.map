{"version":3,"sources":["components/footer/github-icon.svg","components/footer/rsschool.svg","components/footer/index.js","components/footer/footer.js","components/main-menu/index.js","components/main-menu/main-menu.js","components/settings-toggle/index.js","components/settings-toggle/settings-toggle.js","components/settings/index.js","components/settings/settings.js","components/game/index.js","components/game/game.js","components/records/index.js","components/records/records.js","components/menu/index.js","components/menu/menu.js","components/hotkeys/index.js","components/hotkeys/hotkeys.js","components/vocabulary.js","components/app/index.js","components/app/app.js","index.js"],"names":["Footer","className","href","target","rel","src","githubIcon","alt","RsIcon","MainMenu","this","props","changeScreen","newGame","hasSavedGame","vocabulary","lang","onClick","continue","settings","records","Component","SettingsToggle","title","name","options","changeSetting","isChecked","type","checked","onChange","Settings","settingsOptions","theme","altMode","startAs","altStartWith","back","Game","e","classList","add","setTimeout","remove","gameField","updateField","gameMessage","gameEnded","elementsToHighlight","autoplay","moves","startedAutoplay","fields","map","item","index","canClick","additionalClass","indexOf","shakeTile","Records","elements","length","style","textAlign","colSpan","table","tableMessage","player","tableHeader","Menu","toggleFullScreen","elem","document","querySelector","requestFullscreen","mozRequestFullscreen","msRequestFullscreen","webkitRequestFullscreen","fullscreenElement","exitFullscreen","then","catch","err","alert","message","currentSection","activeSection","Hotkeys","hotkeys","ru","playerMessageTemplate","tieMessageTemplate","winMessage","en","App","resetGame","state","setState","updateLocalStorage","autoplayInterval","setInterval","emptyField","getRandomEmptyField","localStorage","setItem","JSON","stringify","emptyFields","field","filter","Math","floor","random","currentPlayer","startPlayer","Array","fill","val","checkIfRecord","recordObject","addNewRecord","newRecords","push","sort","a","b","slice","position","updateMoves","winCondition","checkWinCondition","endGame","switchCurrentPlayer","tie","window","clearInterval","combination","winner","switchStartPlayer","switchTheme","nextPlayer","newVal","lines","i","c","defaultState","sound","music","mute","value","effects","savedState","parse","getItem","appliedState","addEventListener","code","data-theme","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.318bdcf6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github-icon.04ed74f3.svg\";","export default __webpack_public_path__ + \"static/media/rsschool.b974d406.svg\";","import Footer from './footer';\r\n\r\nexport default Footer;","import './footer.css';\r\nimport githubIcon from './github-icon.svg';\r\nimport RsIcon from './rsschool.svg';\r\n\r\nexport default function Footer() {\r\n  return(\r\n    <footer className='footer'>\r\n      <div className='container'>\r\n        <div className='footer__wrap'>\r\n          <a className='footer__link' href='https://github.com/Heliken' target='_blank' rel=\"noreferrer\">\r\n            <img src={githubIcon} alt='github'/>\r\n          </a>\r\n          <div className='footer__year '>2021</div>\r\n          <a className='footer__link' href='https://rs.school/' target='_blank' rel=\"noreferrer\">\r\n            <img src={RsIcon} alt='rolling scopes'/>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}","import MainMenu from './main-menu';\r\n\r\nexport default MainMenu;","import React, {Component} from 'react';\r\nimport './main-menu.css';\r\n\r\nexport default class MainMenu extends Component {\r\n  render(){\r\n    const {changeScreen, newGame, hasSavedGame, vocabulary,lang} = this.props;\r\n    return(\r\n      <div className=\"menu__wrap\">\r\n        {hasSavedGame &&\r\n          <div className=\"menu__unit\" >\r\n            <span className='underline' onClick={() => { changeScreen('game') }}>{vocabulary[lang].continue}</span>\r\n          </div>\r\n        }\r\n        <div className=\"menu__unit\">\r\n          <span className='underline' onClick={() => { newGame() }}>{vocabulary[lang].newGame}</span>\r\n        </div>\r\n        <div className=\"menu__unit\" >\r\n          <span className=\"underline\" onClick={() => { changeScreen('settings') }}>{vocabulary[lang].settings}</span>\r\n        </div>\r\n        <div className=\"menu__unit\" >\r\n          <span className=\"underline\" onClick={() => { changeScreen('records') }}>{vocabulary[lang].records}</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import SettingsToggle from './settings-toggle';\r\n\r\nexport default SettingsToggle;","import React, {Component} from 'react';\r\n\r\nimport './settings-toggle.css';\r\n\r\nexport default class SettingsToggle extends Component {\r\n  render() {\r\n    const {title, name, options, changeSetting, isChecked } = this.props;\r\n    return(\r\n      <div className='settings-toggle'>\r\n        <div className='settings-toggle__title'>{title}</div>\r\n        <div className='settings-toggle__body'>\r\n          <div className='settings-toggle__option'>{options[0]}</div>\r\n          <label className='settings-toggle__label'>\r\n            <input name={name} type='checkbox' checked={isChecked} onChange={changeSetting}/>\r\n            <span></span>\r\n          </label>\r\n          <div className='settings-toggle__option'>{options[1]}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import Settings from './settings';\r\n\r\nexport default Settings;","import React, {Component} from 'react';\r\n\r\nimport SettingsToggle from '../settings-toggle';\r\n\r\nimport './settings.css';\r\n\r\nexport default class Settings extends Component {\r\n  \r\n  render() {\r\n    const {changeScreen, changeSetting, settings,vocabulary,lang} = this.props;\r\n    return(\r\n      <div className=\"menu__wrap\">\r\n        <div className=\"menu__unit\">\r\n          <SettingsToggle \r\n            title={vocabulary[lang].settingsOptions.theme.title}\r\n            name=\"altMode\"\r\n            options={vocabulary[lang].settingsOptions.theme.options}\r\n            changeSetting={changeSetting}\r\n            isChecked = {settings.altMode}\r\n            />\r\n        </div>\r\n        <div className=\"menu__unit\">\r\n          <SettingsToggle \r\n            title={vocabulary[lang].settingsOptions.startAs.title}\r\n            name=\"altStartWith\"\r\n            options={vocabulary[lang].settingsOptions.startAs.options}\r\n            changeSetting={changeSetting}\r\n            isChecked = {settings.altStartWith}\r\n          />\r\n        </div>\r\n        <div className=\"menu__unit\">\r\n          <SettingsToggle \r\n            title={vocabulary[lang].settingsOptions.lang.title}\r\n            name=\"lang\"\r\n            options={vocabulary[lang].settingsOptions.lang.options}\r\n            isChecked = {settings.lang === 'ru'}\r\n            changeSetting={changeSetting}\r\n          />\r\n        </div>\r\n        <div className=\"menu__unit\">\r\n          <span className=\"underline\" onClick={()=> changeScreen('menu')}>{vocabulary[lang].back}</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import Game from './game';\r\n\r\nexport default Game;","import React, {Component} from 'react';\r\n\r\nimport './game.css';\r\n\r\nexport default class Game extends Component {\r\n  shakeTile(e) {\r\n    e.target.classList.add('game__field-section--shake');\r\n    setTimeout(function(){\r\n      e.target.classList.remove('game__field-section--shake')\r\n    },200)\r\n  }\r\n  render(){\r\n    const {gameField, changeScreen, updateField, gameMessage, gameEnded, elementsToHighlight, autoplay, moves, startedAutoplay, vocabulary, lang } = this.props;\r\n    const fields = gameField.map((item,index) => {\r\n      const canClick = !item ;\r\n      let additionalClass='';\r\n      switch(item){\r\n        case 'X':\r\n          additionalClass += ' game__field-section--x'\r\n          break;\r\n        case 'O':\r\n          additionalClass += ' game__field-section--o'  \r\n          break;\r\n        default:\r\n          additionalClass += '';\r\n      }\r\n      if(gameEnded && elementsToHighlight.indexOf(index) < 0) {\r\n        additionalClass += ' game__field-section--semi-hidden';\r\n      }\r\n      return (\r\n        <div className={`game__field-section${additionalClass}`}\r\n          key={index} \r\n          onClick={canClick && !gameEnded && !startedAutoplay ? () => updateField(index) : this.shakeTile}\r\n          ></div>\r\n      )\r\n    })\r\n    return(\r\n      <div className=\"game\">\r\n        <div className=\"game__header\">\r\n          <div className=\"game__back underline\" onClick={()=>{changeScreen('menu');}}>{vocabulary[lang].back}</div>\r\n          <div className=\"game__autoplay underline\" onClick={()=>{autoplay();}}>{vocabulary[lang].autoplay}</div>\r\n          <div className=\"game__stats\">\r\n            <div className=\"game__moves \">{`${vocabulary[lang].moves}: ${moves}`}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"game__field\">\r\n          {fields}\r\n        </div>\r\n        <div className=\"game__message\">{gameMessage}</div>\r\n      </div>\r\n    )\r\n  }\r\n}","import Records from './records';\r\n\r\nexport default Records;","import React, {Component} from 'react';\r\n\r\nimport './records.css';\r\n\r\nexport default class Records extends Component {\r\n  render() {\r\n    const {records, changeScreen, vocabulary,lang} = this.props;\r\n    let elements;\r\n    if(records.length<1){\r\n      elements = <tr><td style={{textAlign: 'center'}} colSpan={3}>{vocabulary[lang].table.tableMessage}</td></tr>\r\n    } else {\r\n      elements = records.map((item,index) => {\r\n        return(\r\n          <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td>{`${vocabulary[lang].player} ${item.player}`}</td>\r\n            <td>{item.moves}</td>\r\n          </tr>\r\n        )\r\n      })\r\n    }\r\n    return(\r\n      <div className=\"menu__wrap\">\r\n        <table className='records'>\r\n          <thead>\r\n            <tr>\r\n              <td>{vocabulary[lang].table.tableHeader[0]}</td>\r\n              <td>{vocabulary[lang].table.tableHeader[1]}</td>\r\n              <td>{vocabulary[lang].table.tableHeader[2]}</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {elements}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"menu__unit\">\r\n          <span className=\"underline\" onClick={()=> changeScreen('menu')}>Back</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import Menu from './menu';\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport MainMenu from '../main-menu';\r\nimport Settings from '../settings';\r\nimport Game from '../game';\r\nimport Records from '../records';\r\n\r\nimport './menu.css';\r\n\r\n\r\nexport default class Menu extends Component {\r\n  toggleFullScreen = () => {\r\n    let elem = document.querySelector(\".app\");\r\n    elem.requestFullscreen = elem.requestFullscreen || elem.mozRequestFullscreen || elem.msRequestFullscreen || elem.webkitRequestFullscreen;\r\n    if (!document.fullscreenElement) {\r\n      elem.requestFullscreen().then({}).catch(err => {\r\n        alert(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);\r\n      });\r\n    } else {\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {activeSection, hasSavedGame, changeScreen, changeSetting, settings, gameField, updateField, newGame, gameMessage, gameEnded, elementsToHighlight, autoplay, moves, startedAutoplay, records, vocabulary, lang } = this.props;\r\n    let currentSection;\r\n    switch(activeSection){\r\n      case 'main':\r\n        currentSection = <MainMenu \r\n          changeScreen={changeScreen}\r\n          newGame={newGame}\r\n          vocabulary={vocabulary}\r\n          lang={lang}\r\n          hasSavedGame={hasSavedGame} />\r\n        break;\r\n      case 'settings':\r\n        currentSection = <Settings\r\n          changeScreen={changeScreen}\r\n          settings={settings}\r\n          vocabulary={vocabulary}\r\n          lang={lang}\r\n          changeSetting={changeSetting}\r\n        />\r\n        break;\r\n      case 'game':\r\n        currentSection = <Game\r\n          vocabulary={vocabulary}\r\n          lang={lang}\r\n          changeScreen={changeScreen}\r\n          autoplay={autoplay}\r\n          moves={moves}\r\n          gameField={gameField}\r\n          updateField={updateField}\r\n          gameMessage={gameMessage}\r\n          gameEnded={gameEnded}\r\n          startedAutoplay={startedAutoplay}\r\n          elementsToHighlight={elementsToHighlight}\r\n        />\r\n        break;\r\n      case 'records':\r\n        currentSection = <Records \r\n          vocabulary={vocabulary}\r\n          lang={lang}\r\n          records={records}\r\n          changeScreen={changeScreen}/>\r\n        break;\r\n      default:\r\n        currentSection = <MainMenu \r\n          vocabulary={vocabulary}\r\n          lang={lang}\r\n          changeScreen={changeScreen}\r\n          newGame={newGame}\r\n          hasSavedGame={hasSavedGame} />\r\n    }\r\n    return(\r\n      <div className=\"menu\">\r\n        <div className=\"menu__fullscreen\" onClick={() =>{this.toggleFullScreen()}}></div>\r\n        {currentSection}\r\n      </div>\r\n    )\r\n  }\r\n}","import Hotkeys from './hotkeys';\r\n\r\nexport default Hotkeys;","import React, {Component} from 'react';\r\n\r\nimport './hotkeys.css';\r\n\r\nexport default class Hotkeys extends Component {\r\n  render() {\r\n    const {vocabulary,lang} = this.props;\r\n    return(\r\n      <div className='hotkeys'>\r\n        <p>{vocabulary[lang].hotkeys}:</p>\r\n        <p>{vocabulary[lang].continue} - C</p>\r\n        <p>{vocabulary[lang].newGame} - N</p>\r\n        <p>{vocabulary[lang].back} - B</p>\r\n        <p>{vocabulary[lang].autoplay} - A</p>\r\n        <p>{vocabulary[lang].settings} - S</p>\r\n      </div>\r\n    )\r\n  }\r\n}","const vocabulary ={\r\n  ru:{\r\n    player:\"Игрок\",\r\n    hotkeys:'Хоткеи',\r\n    newGame:'Новая игра',\r\n    continue:\"Продолжить\",\r\n    back:\"Назад\",\r\n    settings:\"Настройки\",\r\n    autoplay:\"Автопроигрывание\",\r\n    moves:\"Ходы\",\r\n    playerMessageTemplate:\"ходит сейчас\",\r\n    tieMessageTemplate:'Это ничья!',\r\n    winMessage:\"победил!\",\r\n    records:\"Рекорды\",\r\n    table:{\r\n      tableHeader:['№','Победитель',\"Ходы\"],\r\n      tableMessage:'Пока нет данных',\r\n    },\r\n    settingsOptions:{\r\n      theme:{\r\n        title:'Тема',\r\n        options:['светлая','темная']\r\n      },\r\n      startAs:{\r\n        title:'Начинать как',\r\n        options:['X','O']\r\n      },\r\n      lang:{\r\n        title:'Язык',\r\n        options:['англ','рус']\r\n      },\r\n    }\r\n  },\r\n  en:{\r\n    player:'Player',\r\n    hotkeys:'Hotkeys',\r\n    newGame:'New game',\r\n    continue:\"Continue\",\r\n    back:\"Back\",\r\n    settings:\"Settings\",\r\n    autoplay:\"Autoplay\",\r\n    moves:\"Moves\",\r\n    playerMessageTemplate:\"player turn\",\r\n    tieMessageTemplate:\"It's a tie!\",\r\n    winMessage:\"wins!\",\r\n    records:\"Records\",\r\n    table:{\r\n      tableHeader:['№','Winner',\"Moves\"],\r\n      tableMessage:'No data yet',\r\n    },\r\n    settingsOptions:{\r\n      theme:{\r\n        title:'Theme',\r\n        options:['light','dark']\r\n      },\r\n      startAs:{\r\n        title:'Start as',\r\n        options:['X','O']\r\n      },\r\n      lang:{\r\n        title:'Language',\r\n        options:['en','ru']\r\n      },\r\n    }\r\n  }\r\n}\r\nexport default vocabulary;","import App from './app';\r\n\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport Footer from '../footer';\r\nimport Menu from '../menu';\r\nimport Hotkeys from '../hotkeys';\r\nimport vocabulary from '../vocabulary';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n  componentWillMount() {\r\n    \r\n    const defaultState = {\r\n      activeSection:\"main\",\r\n      hasSavedGame:false,\r\n      theme:'light',\r\n      settings:{\r\n        altMode:false,\r\n        altStartWith:false,\r\n        lang:'en',\r\n      },\r\n      vocabulary:vocabulary,\r\n      moves:0,\r\n      startedAutoplay: false,\r\n      gameEnded: false,\r\n      gameMessage:'X player turn',\r\n      elementsToHighlight:[],\r\n      startPlayer:'X',\r\n      currentPlayer:'X',\r\n      field:new Array(9).fill(null),\r\n      records:[],\r\n      sound:{\r\n        music:{\r\n          mute:false,\r\n          value:1,\r\n        },\r\n        effects:{\r\n          mute:false,\r\n          value:1,\r\n        }\r\n      }\r\n    }\r\n    const savedState = JSON.parse(localStorage.getItem('heliken-tic-tac-toe-data'));\r\n    const appliedState = savedState ? savedState : defaultState;\r\n    this.setState(()=>{\r\n      return appliedState\r\n    },() => {\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', (e) => {\r\n      let keyCode = e.code;\r\n      switch(keyCode){\r\n        case \"KeyB\":\r\n          if(this.state.activeSection!=='main') this.changeScreen('main');\r\n          break;\r\n        case \"KeyS\":\r\n          if(this.state.activeSection === 'main') this.changeScreen('settings');\r\n          break;\r\n        case \"KeyN\":\r\n          if(this.state.activeSection === 'main') this.newGame();\r\n          break;\r\n        case \"KeyC\":\r\n          if(this.state.activeSection==='main' && this.state.hasSavedGame) this.changeScreen('game');\r\n          break;  \r\n        case \"KeyA\":\r\n          if(this.state.activeSection==='game') this.autoplay();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    })\r\n  }\r\n  autoplayInterval\r\n\r\n  autoplay = () => {\r\n    this.resetGame();\r\n    if(!this.state.startedAutoplay){\r\n      this.setState(() => {\r\n        return{\r\n          startedAutoplay: true\r\n        }\r\n      },() => {\r\n        this.updateLocalStorage();\r\n      })\r\n      this.autoplayInterval = setInterval(() => {\r\n        const emptyField = this.getRandomEmptyField();\r\n        if(emptyField || emptyField === 0){\r\n          this.updateField(emptyField);\r\n        }\r\n      }, 500)\r\n    }\r\n  }\r\n  updateLocalStorage = () => {\r\n    localStorage.setItem('heliken-tic-tac-toe-data',JSON.stringify(this.state));\r\n  }\r\n  getRandomEmptyField = () => {\r\n    const emptyFields = this.state.field.map((item, index) => item === null ? index: null ).filter((item)=> item !== null);\r\n    const randomEmptyField = emptyFields[Math.floor(Math.random() * emptyFields.length)];\r\n    return randomEmptyField\r\n  }\r\n  newGame = () => {\r\n    this.resetGame();\r\n    this.changeScreen('game');\r\n  }\r\n  resetGame = () => {\r\n    this.setState(() => {\r\n      return {\r\n        moves:0,\r\n        startedAutoplay:false,\r\n        elementsToHighlight:[],\r\n        gameEnded:false,\r\n        hasSavedGame: false,\r\n        currentPlayer:this.state.startPlayer,\r\n        gameMessage:`${this.state.startPlayer} ${this.state.vocabulary[this.state.settings.lang].playerMessageTemplate}`,\r\n        field: new Array(9).fill(null),\r\n      }\r\n    },() => {\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  changeScreen = (val) => {\r\n    if(!this.state.startedAutoplay){\r\n      this.setState(() => {\r\n        return {\r\n          activeSection: val,\r\n        }\r\n      },() => {\r\n        this.updateLocalStorage();\r\n      })\r\n    }\r\n  }\r\n  checkIfRecord = (recordObject) => {\r\n    if(this.state.records.length > 9){\r\n      if(recordObject.moves < this.state.records[this.state.records.length - 1]){\r\n        this.addNewRecord(recordObject);\r\n      }\r\n    } else{\r\n      this.addNewRecord(recordObject);\r\n    }\r\n  }\r\n  addNewRecord = (recordObject) =>{\r\n    let newRecords = [...this.state.records];\r\n    newRecords.push(recordObject);\r\n    newRecords.sort((a,b) => a.moves - b.moves);\r\n    this.setState(()=>{\r\n      return{\r\n        records:newRecords.slice(0,9)\r\n      }\r\n    })\r\n  }\r\n  updateField = (position) => {\r\n    this.setState(({field}) => {\r\n      const newArray = [...field.slice(0, position),this.state.currentPlayer, ...field.slice(position + 1)];\r\n\r\n      return {\r\n        hasSavedGame: true,\r\n        field: newArray,\r\n      }\r\n    },()=>{\r\n      this.updateMoves();\r\n      let winCondition = this.checkWinCondition();\r\n      if(!winCondition){\r\n        if(this.state.field.indexOf(null) < 0 ){\r\n          this.endGame('',true)\r\n        } else {\r\n          this.switchCurrentPlayer();\r\n        }\r\n      } else {\r\n        this.endGame(winCondition);\r\n      }\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  updateMoves = () => {\r\n    this.setState(({moves})=>{\r\n      return{\r\n       moves: moves + 1\r\n      }\r\n    },() => {\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  endGame = (winCondition, tie = false) => {\r\n    if(this.autoplayInterval) window.clearInterval(this.autoplayInterval);\r\n    this.setState(() => {\r\n      return {\r\n        startedAutoplay: false,\r\n        gameEnded:true,\r\n        elementsToHighlight: tie ? [] : winCondition.combination,\r\n        gameMessage: tie ? this.state.vocabulary[this.state.settings.lang].tieMessageTemplate : `${winCondition.winner} ${this.state.vocabulary[this.state.settings.lang].winMessage}`\r\n      }\r\n    },() => {\r\n      if(!tie && winCondition){\r\n        this.checkIfRecord({player:winCondition.winner,moves:this.state.moves});\r\n      }\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  switchStartPlayer = () => {\r\n    this.setState(() => {\r\n      let newStartPlayer = this.state.settings.altStartWith ? 'O' : 'X';\r\n      return{\r\n        startPlayer: newStartPlayer,\r\n      }\r\n    },() => {\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  switchTheme = () => {\r\n    this.setState(({theme}) => {\r\n      return {\r\n        theme: theme === 'light' ? 'dark' : 'light'\r\n      }\r\n    }, () => {;\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  switchCurrentPlayer = () => {\r\n    this.setState(({currentPlayer}) => {\r\n      const nextPlayer = currentPlayer === 'X' ? 'O' : 'X';\r\n      return{\r\n        gameMessage: `${nextPlayer} ${this.state.vocabulary[this.state.settings.lang].playerMessageTemplate}`,\r\n        currentPlayer: nextPlayer\r\n      }\r\n    },() => {\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  changeSetting = (e) => {\r\n    this.setState(({settings}) => {\r\n      let newVal = e.target.checked;\r\n      if(e.target.name==='lang'){\r\n        newVal = e.target.checked ? 'ru' : 'en'\r\n      }\r\n      let newSettings = {...settings,[e.target.name]: newVal}\r\n      return {\r\n        settings:newSettings\r\n      }\r\n    },() => {\r\n      if(e.target.name === 'altStartWith' || e.target.name === 'withAI'){\r\n        this.resetGame();\r\n      }\r\n      if (e.target.name === 'altStartWith'){\r\n        this.switchStartPlayer();\r\n      }\r\n      if (e.target.name === 'altMode'){\r\n        this.switchTheme();\r\n      }\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  \r\n  checkWinCondition = () => {\r\n    // source: https://reactjs.org/tutorial/tutorial.html#declaring-a-winner \r\n    const field = this.state.field; \r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (field[a] && field[a] === field[b] && field[a] === field[c]) {\r\n        return {\r\n          combination:[a, b, c],\r\n          winner: field[a]\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  \r\n  render(){\r\n    const {activeSection, settings, field, hasSavedGame, gameMessage, gameEnded, elementsToHighlight, moves, theme, startedAutoplay, records, vocabulary} = this.state;\r\n    const lang = this.state.settings.lang;\r\n    return (\r\n      <div className=\"app\" data-theme={theme}>\r\n        <Hotkeys vocabulary={vocabulary}\r\n            lang={lang}/>\r\n        <div className=\"app__body\">\r\n          <Menu\r\n            gameField={field}\r\n            updateField={this.updateField}\r\n            activeSection = {activeSection}\r\n            hasSavedGame = {hasSavedGame}\r\n            changeScreen={this.changeScreen}\r\n            settings={settings}\r\n            gameEnded={gameEnded}\r\n            elementsToHighlight={elementsToHighlight}\r\n            newGame={this.newGame}\r\n            autoplay={this.autoplay}\r\n            moves = {moves}\r\n            gameMessage = {gameMessage}\r\n            startedAutoplay = {startedAutoplay}\r\n            records={records}\r\n            vocabulary={vocabulary}\r\n            lang={lang}\r\n            changeSetting={this.changeSetting}/>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}