{"version":3,"sources":["components/footer/github-icon.svg","components/footer/rsschool.svg","components/footer/index.js","components/footer/footer.js","components/main-menu/index.js","components/main-menu/main-menu.js","components/settings-toggle/index.js","components/settings-toggle/settings-toggle.js","components/settings/index.js","components/settings/settings.js","components/game/index.js","components/game/game.js","components/records/index.js","components/records/records.js","components/sound/index.js","components/sound/sound.js","components/menu/index.js","components/menu/menu.js","components/hotkeys/index.js","components/hotkeys/hotkeys.js","components/vocabulary.js","components/sound/effect.wav","components/sound/music.mp3","components/app/index.js","components/app/app.js","index.js"],"names":["Footer","className","href","target","rel","src","githubIcon","alt","RsIcon","MainMenu","this","props","changeScreen","newGame","hasSavedGame","vocabulary","lang","onClick","continue","settings","records","Component","SettingsToggle","title","name","options","changeSetting","isChecked","type","checked","onChange","Settings","settingsOptions","theme","altMode","startAs","altStartWith","back","Game","e","classList","add","setTimeout","remove","gameField","updateField","gameMessage","gameEnded","elementsToHighlight","autoplay","moves","startedAutoplay","fields","map","item","index","canClick","additionalClass","indexOf","shakeTile","Records","elements","length","style","textAlign","colSpan","table","tableMessage","player","tableHeader","Sound","music","effects","setSoundValue","value","min","max","step","sounds","Menu","toggleFullScreen","elem","document","querySelector","requestFullscreen","mozRequestFullscreen","msRequestFullscreen","webkitRequestFullscreen","fullscreenElement","exitFullscreen","then","catch","err","alert","message","currentSection","activeSection","Hotkeys","hotkeys","ru","playerMessageTemplate","tieMessageTemplate","winMessage","en","App","resetGame","state","setState","updateLocalStorage","autoplayInterval","setInterval","emptyField","getRandomEmptyField","localStorage","setItem","JSON","stringify","emptyFields","field","filter","Math","floor","random","currentPlayer","startPlayer","Array","fill","val","effectAudio","play","checkIfRecord","recordObject","addNewRecord","newRecords","push","sort","a","b","slice","position","updateMoves","winCondition","checkWinCondition","endGame","switchCurrentPlayer","tie","window","clearInterval","combination","winner","switchStartPlayer","switchTheme","nextPlayer","newValue","parseFloat","volume","musicAudio","addAudio","Audio","effect","musicLink","loop","newVal","lines","i","c","defaultState","savedState","parse","getItem","appliedState","addEventListener","code","data-theme","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4aacb03e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github-icon.04ed74f3.svg\";","export default __webpack_public_path__ + \"static/media/rsschool.b974d406.svg\";","import Footer from './footer';\r\n\r\nexport default Footer;","import './footer.css';\r\nimport githubIcon from './github-icon.svg';\r\nimport RsIcon from './rsschool.svg';\r\n\r\nexport default function Footer() {\r\n  return(\r\n    <footer className='footer'>\r\n      <div className='container'>\r\n        <div className='footer__wrap'>\r\n          <a className='footer__link' href='https://github.com/Heliken' target='_blank' rel=\"noreferrer\">\r\n            <img src={githubIcon} alt='github'/>\r\n          </a>\r\n          <div className='footer__year '>2021</div>\r\n          <a className='footer__link' href='https://rs.school/' target='_blank' rel=\"noreferrer\">\r\n            <img src={RsIcon} alt='rolling scopes'/>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}","import MainMenu from './main-menu';\r\n\r\nexport default MainMenu;","import React, {Component} from 'react';\r\nimport './main-menu.css';\r\n\r\nexport default class MainMenu extends Component {\r\n  render(){\r\n    const {changeScreen, newGame, hasSavedGame, vocabulary,lang} = this.props;\r\n    return(\r\n      <div className=\"menu__wrap\">\r\n        {hasSavedGame &&\r\n          <div className=\"menu__unit\" >\r\n            <span className='underline' onClick={() => { changeScreen('game') }}>{vocabulary[lang].continue}</span>\r\n          </div>\r\n        }\r\n        <div className=\"menu__unit\">\r\n          <span className='underline' onClick={() => { newGame() }}>{vocabulary[lang].newGame}</span>\r\n        </div>\r\n        <div className=\"menu__unit\" >\r\n          <span className=\"underline\" onClick={() => { changeScreen('settings') }}>{vocabulary[lang].settings}</span>\r\n        </div>\r\n        <div className=\"menu__unit\" >\r\n          <span className=\"underline\" onClick={() => { changeScreen('records') }}>{vocabulary[lang].records}</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import SettingsToggle from './settings-toggle';\r\n\r\nexport default SettingsToggle;","import React, {Component} from 'react';\r\n\r\nimport './settings-toggle.css';\r\n\r\nexport default class SettingsToggle extends Component {\r\n  render() {\r\n    const {title, name, options, changeSetting, isChecked } = this.props;\r\n    return(\r\n      <div className='settings-toggle'>\r\n        <div className='settings-toggle__title'>{title}</div>\r\n        <div className='settings-toggle__body'>\r\n          <div className='settings-toggle__option'>{options[0]}</div>\r\n          <label className='settings-toggle__label'>\r\n            <input name={name} type='checkbox' checked={isChecked} onChange={changeSetting}/>\r\n            <span></span>\r\n          </label>\r\n          <div className='settings-toggle__option'>{options[1]}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import Settings from './settings';\r\n\r\nexport default Settings;","import React, {Component} from 'react';\r\n\r\nimport SettingsToggle from '../settings-toggle';\r\n\r\nimport './settings.css';\r\n\r\nexport default class Settings extends Component {\r\n  \r\n  render() {\r\n    const {changeScreen, changeSetting, settings,vocabulary,lang} = this.props;\r\n    return(\r\n      <div className=\"menu__wrap\">\r\n        <div className=\"menu__unit\">\r\n          <SettingsToggle \r\n            title={vocabulary[lang].settingsOptions.theme.title}\r\n            name=\"altMode\"\r\n            options={vocabulary[lang].settingsOptions.theme.options}\r\n            changeSetting={changeSetting}\r\n            isChecked = {settings.altMode}\r\n            />\r\n        </div>\r\n        <div className=\"menu__unit\">\r\n          <SettingsToggle \r\n            title={vocabulary[lang].settingsOptions.startAs.title}\r\n            name=\"altStartWith\"\r\n            options={vocabulary[lang].settingsOptions.startAs.options}\r\n            changeSetting={changeSetting}\r\n            isChecked = {settings.altStartWith}\r\n          />\r\n        </div>\r\n        <div className=\"menu__unit\">\r\n          <SettingsToggle \r\n            title={vocabulary[lang].settingsOptions.lang.title}\r\n            name=\"lang\"\r\n            options={vocabulary[lang].settingsOptions.lang.options}\r\n            isChecked = {settings.lang === 'ru'}\r\n            changeSetting={changeSetting}\r\n          />\r\n        </div>\r\n        <div className=\"menu__unit\">\r\n          <span className=\"underline\" onClick={()=> changeScreen('menu')}>{vocabulary[lang].back}</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import Game from './game';\r\n\r\nexport default Game;","import React, {Component} from 'react';\r\n\r\nimport './game.css';\r\n\r\nexport default class Game extends Component {\r\n  shakeTile(e) {\r\n    e.target.classList.add('game__field-section--shake');\r\n    setTimeout(function(){\r\n      e.target.classList.remove('game__field-section--shake')\r\n    },200)\r\n  }\r\n  render(){\r\n    const {gameField, changeScreen, updateField, gameMessage, gameEnded, elementsToHighlight, autoplay, moves, startedAutoplay, vocabulary, lang } = this.props;\r\n    const fields = gameField.map((item,index) => {\r\n      const canClick = !item ;\r\n      let additionalClass='';\r\n      switch(item){\r\n        case 'X':\r\n          additionalClass += ' game__field-section--x'\r\n          break;\r\n        case 'O':\r\n          additionalClass += ' game__field-section--o'  \r\n          break;\r\n        default:\r\n          additionalClass += '';\r\n      }\r\n      if(gameEnded && elementsToHighlight.indexOf(index) < 0) {\r\n        additionalClass += ' game__field-section--semi-hidden';\r\n      }\r\n      return (\r\n        <div className={`game__field-section${additionalClass}`}\r\n          key={index} \r\n          onClick={canClick && !gameEnded && !startedAutoplay ? () => updateField(index) : this.shakeTile}\r\n          ></div>\r\n      )\r\n    })\r\n    return(\r\n      <div className=\"game\">\r\n        <div className=\"game__header\">\r\n          <div className=\"game__back underline\" onClick={()=>{changeScreen('menu');}}>{vocabulary[lang].back}</div>\r\n          <div className=\"game__autoplay underline\" onClick={()=>{autoplay();}}>{vocabulary[lang].autoplay}</div>\r\n          <div className=\"game__stats\">\r\n            <div className=\"game__moves \">{`${vocabulary[lang].moves}: ${moves}`}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"game__field\">\r\n          {fields}\r\n        </div>\r\n        <div className=\"game__message\">{gameMessage}</div>\r\n      </div>\r\n    )\r\n  }\r\n}","import Records from './records';\r\n\r\nexport default Records;","import React, {Component} from 'react';\r\n\r\nimport './records.css';\r\n\r\nexport default class Records extends Component {\r\n  render() {\r\n    const {records, changeScreen, vocabulary,lang} = this.props;\r\n    let elements;\r\n    if(records.length<1){\r\n      elements = <tr><td style={{textAlign: 'center'}} colSpan={3}>{vocabulary[lang].table.tableMessage}</td></tr>\r\n    } else {\r\n      elements = records.map((item,index) => {\r\n        return(\r\n          <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td>{`${vocabulary[lang].player} ${item.player}`}</td>\r\n            <td>{item.moves}</td>\r\n          </tr>\r\n        )\r\n      })\r\n    }\r\n    return(\r\n      <div className=\"menu__wrap\">\r\n        <table className='records'>\r\n          <thead>\r\n            <tr>\r\n              <td>{vocabulary[lang].table.tableHeader[0]}</td>\r\n              <td>{vocabulary[lang].table.tableHeader[1]}</td>\r\n              <td>{vocabulary[lang].table.tableHeader[2]}</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {elements}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"menu__unit\">\r\n          <span className=\"underline\" onClick={()=> changeScreen('menu')}>Back</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import Sound from './sound';\r\n\r\nexport default Sound;","import React, {Component} from 'react';\r\n\r\nimport './sound.css';\r\n\r\nexport default class Sound extends Component {\r\n  render() {\r\n    const {vocabulary,lang,music, effects, setSoundValue} = this.props;\r\n    return(\r\n      <div className=\"sounds\">\r\n        <div className={`sounds-block ${music === 0 ? 'sounds-block--disabled' : ''}`}>\r\n          <div className='sounds-block__title'>{`${vocabulary[lang].music}: `}</div>\r\n          <label className='settings-toggle__label sounds-block__toggle'>\r\n            <input name='music' type='checkbox' checked={music > 0} onChange={setSoundValue}/>\r\n            <span></span>\r\n          </label>\r\n          <input name='music' value={music} className=\"sounds-block__range\" type='range' min={0} max={1} step={0.1} onChange={setSoundValue}/>\r\n        </div>\r\n        <div className={`sounds-block ${effects === 0 ? 'sounds-block--disabled' : ''}`}>\r\n          <div className='sounds-block__title'>{`${vocabulary[lang].sounds}: `}</div>\r\n          <label className='settings-toggle__label sounds-block__toggle'>\r\n            <input name='effects' type='checkbox' checked={effects > 0} onChange={setSoundValue}/>\r\n            <span></span>\r\n          </label>\r\n          <input name='effects' value={effects} className=\"sounds-block__range\" type='range' min={0} max={1} step={0.1} onChange={setSoundValue}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import Menu from './menu';\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport MainMenu from '../main-menu';\r\nimport Settings from '../settings';\r\nimport Game from '../game';\r\nimport Records from '../records';\r\nimport Sound from '../sound';\r\n\r\nimport './menu.css';\r\n\r\n\r\nexport default class Menu extends Component {\r\n  toggleFullScreen = () => {\r\n    let elem = document.querySelector(\".app\");\r\n    elem.requestFullscreen = elem.requestFullscreen || elem.mozRequestFullscreen || elem.msRequestFullscreen || elem.webkitRequestFullscreen;\r\n    if (!document.fullscreenElement) {\r\n      elem.requestFullscreen().then({}).catch(err => {\r\n        alert(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);\r\n      });\r\n    } else {\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {activeSection, hasSavedGame, changeScreen, changeSetting, settings, gameField, updateField, newGame, gameMessage, gameEnded, elementsToHighlight, autoplay, moves, startedAutoplay, records, vocabulary, lang, music, effects, setSoundValue} = this.props;\r\n    let currentSection;\r\n    switch(activeSection){\r\n      case 'main':\r\n        currentSection = <MainMenu \r\n          changeScreen={changeScreen}\r\n          newGame={newGame}\r\n          vocabulary={vocabulary}\r\n          lang={lang}\r\n          hasSavedGame={hasSavedGame} />\r\n        break;\r\n      case 'settings':\r\n        currentSection = <Settings\r\n          changeScreen={changeScreen}\r\n          settings={settings}\r\n          vocabulary={vocabulary}\r\n          lang={lang}\r\n          changeSetting={changeSetting}\r\n        />\r\n        break;\r\n      case 'game':\r\n        currentSection = <Game\r\n          vocabulary={vocabulary}\r\n          lang={lang}\r\n          changeScreen={changeScreen}\r\n          autoplay={autoplay}\r\n          moves={moves}\r\n          gameField={gameField}\r\n          updateField={updateField}\r\n          gameMessage={gameMessage}\r\n          gameEnded={gameEnded}\r\n          startedAutoplay={startedAutoplay}\r\n          elementsToHighlight={elementsToHighlight}\r\n        />\r\n        break;\r\n      case 'records':\r\n        currentSection = <Records \r\n          vocabulary={vocabulary}\r\n          lang={lang}\r\n          records={records}\r\n          changeScreen={changeScreen}/>\r\n        break;\r\n      default:\r\n        currentSection = <MainMenu \r\n          vocabulary={vocabulary}\r\n          lang={lang}\r\n          changeScreen={changeScreen}\r\n          newGame={newGame}\r\n          hasSavedGame={hasSavedGame} />\r\n    }\r\n    return(\r\n      <div className=\"menu\">\r\n        <div className=\"menu__fullscreen\" onClick={() =>{this.toggleFullScreen()}}></div>\r\n        {currentSection}\r\n        <Sound vocabulary={vocabulary}\r\n          lang={lang}\r\n          music={music}\r\n          effects={effects}\r\n          setSoundValue={setSoundValue}/>\r\n      </div>\r\n    )\r\n  }\r\n}","import Hotkeys from './hotkeys';\r\n\r\nexport default Hotkeys;","import React, {Component} from 'react';\r\n\r\nimport './hotkeys.css';\r\n\r\nexport default class Hotkeys extends Component {\r\n  render() {\r\n    const {vocabulary,lang} = this.props;\r\n    return(\r\n      <div className='hotkeys'>\r\n        <p>{vocabulary[lang].hotkeys}:</p>\r\n        <p>{vocabulary[lang].continue} - C</p>\r\n        <p>{vocabulary[lang].newGame} - N</p>\r\n        <p>{vocabulary[lang].back} - B</p>\r\n        <p>{vocabulary[lang].autoplay} - A</p>\r\n        <p>{vocabulary[lang].settings} - S</p>\r\n      </div>\r\n    )\r\n  }\r\n}","const vocabulary ={\r\n  ru:{\r\n    player:\"Игрок\",\r\n    hotkeys:'Хоткеи',\r\n    newGame:'Новая игра',\r\n    continue:\"Продолжить\",\r\n    back:\"Назад\",\r\n    settings:\"Настройки\",\r\n    autoplay:\"Автопроигрывание\",\r\n    moves:\"Ходы\",\r\n    playerMessageTemplate:\"ходит сейчас\",\r\n    tieMessageTemplate:'Это ничья!',\r\n    winMessage:\"победил!\",\r\n    records:\"Рекорды\",\r\n    music:\"Музыка\",\r\n    sounds:\"Звуки\",\r\n    table:{\r\n      tableHeader:['№','Победитель',\"Ходы\"],\r\n      tableMessage:'Пока нет данных',\r\n    },\r\n    settingsOptions:{\r\n      theme:{\r\n        title:'Тема',\r\n        options:['светлая','темная']\r\n      },\r\n      startAs:{\r\n        title:'Начинать как',\r\n        options:['X','O']\r\n      },\r\n      lang:{\r\n        title:'Язык',\r\n        options:['англ','рус']\r\n      },\r\n    }\r\n  },\r\n  en:{\r\n    player:'Player',\r\n    hotkeys:'Hotkeys',\r\n    newGame:'New game',\r\n    continue:\"Continue\",\r\n    back:\"Back\",\r\n    settings:\"Settings\",\r\n    autoplay:\"Autoplay\",\r\n    moves:\"Moves\",\r\n    playerMessageTemplate:\"player turn\",\r\n    tieMessageTemplate:\"It's a tie!\",\r\n    winMessage:\"wins!\",\r\n    records:\"Records\",\r\n    music:\"Music\",\r\n    sounds:\"Sounds\",\r\n    table:{\r\n      tableHeader:['№','Winner',\"Moves\"],\r\n      tableMessage:'No data yet',\r\n    },\r\n    settingsOptions:{\r\n      theme:{\r\n        title:'Theme',\r\n        options:['light','dark']\r\n      },\r\n      startAs:{\r\n        title:'Start as',\r\n        options:['X','O']\r\n      },\r\n      lang:{\r\n        title:'Language',\r\n        options:['en','ru']\r\n      },\r\n    }\r\n  }\r\n}\r\nexport default vocabulary;","export default __webpack_public_path__ + \"static/media/effect.ae2de8e7.wav\";","export default __webpack_public_path__ + \"static/media/music.5334e6a4.mp3\";","import App from './app';\r\n\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport Footer from '../footer';\r\nimport Menu from '../menu';\r\nimport Hotkeys from '../hotkeys';\r\nimport vocabulary from '../vocabulary';\r\nimport effect from '../sound/effect.wav';\r\nimport musicLink from '../sound/music.mp3';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n  componentWillMount() {\r\n    \r\n    const defaultState = {\r\n      activeSection:\"main\",\r\n      hasSavedGame:false,\r\n      theme:'light',\r\n      settings:{\r\n        altMode:false,\r\n        altStartWith:false,\r\n        lang:'en',\r\n      },\r\n      vocabulary:vocabulary,\r\n      moves:0,\r\n      startedAutoplay: false,\r\n      gameEnded: false,\r\n      gameMessage:'X player turn',\r\n      elementsToHighlight:[],\r\n      startPlayer:'X',\r\n      currentPlayer:'X',\r\n      field:new Array(9).fill(null),\r\n      records:[],\r\n      music:.2,\r\n      effects:1,\r\n    }\r\n    const savedState = JSON.parse(localStorage.getItem('heliken-tic-tac-toe-data'));\r\n    const appliedState = savedState ? savedState : defaultState;\r\n    this.setState(()=>{\r\n      return appliedState\r\n    },() => {\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    this.addAudio();\r\n    document.addEventListener('keydown', (e) => {\r\n      let keyCode = e.code;\r\n      switch(keyCode){\r\n        case \"KeyB\":\r\n          if(this.state.activeSection!=='main') this.changeScreen('main');\r\n          break;\r\n        case \"KeyS\":\r\n          if(this.state.activeSection === 'main') this.changeScreen('settings');\r\n          break;\r\n        case \"KeyN\":\r\n          if(this.state.activeSection === 'main') this.newGame();\r\n          break;\r\n        case \"KeyC\":\r\n          if(this.state.activeSection==='main' && this.state.hasSavedGame) this.changeScreen('game');\r\n          break;  \r\n        case \"KeyA\":\r\n          if(this.state.activeSection==='game') this.autoplay();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    })\r\n  }\r\n  autoplayInterval\r\n  \r\n  autoplay = () => {\r\n    this.resetGame();\r\n    if(!this.state.startedAutoplay){\r\n      this.setState(() => {\r\n        return{\r\n          startedAutoplay: true\r\n        }\r\n      },() => {\r\n        this.updateLocalStorage();\r\n      })\r\n      this.autoplayInterval = setInterval(() => {\r\n        const emptyField = this.getRandomEmptyField();\r\n        if(emptyField || emptyField === 0){\r\n          this.updateField(emptyField);\r\n        }\r\n      }, 500)\r\n    }\r\n  }\r\n  updateLocalStorage = () => {\r\n    localStorage.setItem('heliken-tic-tac-toe-data',JSON.stringify(this.state));\r\n  }\r\n  getRandomEmptyField = () => {\r\n    const emptyFields = this.state.field.map((item, index) => item === null ? index: null ).filter((item)=> item !== null);\r\n    const randomEmptyField = emptyFields[Math.floor(Math.random() * emptyFields.length)];\r\n    return randomEmptyField\r\n  }\r\n  newGame = () => {\r\n    this.resetGame();\r\n    this.changeScreen('game');\r\n  }\r\n  resetGame = () => {\r\n    this.setState(() => {\r\n      return {\r\n        moves:0,\r\n        startedAutoplay:false,\r\n        elementsToHighlight:[],\r\n        gameEnded:false,\r\n        hasSavedGame: false,\r\n        currentPlayer:this.state.startPlayer,\r\n        gameMessage:`${this.state.startPlayer} ${this.state.vocabulary[this.state.settings.lang].playerMessageTemplate}`,\r\n        field: new Array(9).fill(null),\r\n      }\r\n    },() => {\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  changeScreen = (val) => {\r\n    if(!this.state.startedAutoplay){\r\n      this.setState(() => {\r\n        return {\r\n          activeSection: val,\r\n        }\r\n      },() => {\r\n        this.effectAudio.play();\r\n        this.updateLocalStorage();\r\n      })\r\n    }\r\n  }\r\n  checkIfRecord = (recordObject) => {\r\n    if(this.state.records.length > 9){\r\n      if(recordObject.moves < this.state.records[this.state.records.length - 1]){\r\n        this.addNewRecord(recordObject);\r\n      }\r\n    } else{\r\n      this.addNewRecord(recordObject);\r\n    }\r\n  }\r\n  addNewRecord = (recordObject) =>{\r\n    let newRecords = [...this.state.records];\r\n    newRecords.push(recordObject);\r\n    newRecords.sort((a,b) => a.moves - b.moves);\r\n    this.setState(()=>{\r\n      return{\r\n        records:newRecords.slice(0,9)\r\n      }\r\n    })\r\n  }\r\n  updateField = (position) => {\r\n    this.setState(({field}) => {\r\n      const newArray = [...field.slice(0, position),this.state.currentPlayer, ...field.slice(position + 1)];\r\n\r\n      return {\r\n        hasSavedGame: true,\r\n        field: newArray,\r\n      }\r\n    },()=>{\r\n      this.updateMoves();\r\n      let winCondition = this.checkWinCondition();\r\n      if(!winCondition){\r\n        if(this.state.field.indexOf(null) < 0 ){\r\n          this.endGame('',true)\r\n        } else {\r\n          this.switchCurrentPlayer();\r\n        }\r\n      } else {\r\n        this.endGame(winCondition);\r\n      }\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  updateMoves = () => {\r\n    this.setState(({moves})=>{\r\n      return{\r\n       moves: moves + 1\r\n      }\r\n    },() => {\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  endGame = (winCondition, tie = false) => {\r\n    if(this.autoplayInterval) window.clearInterval(this.autoplayInterval);\r\n    this.setState(() => {\r\n      return {\r\n        startedAutoplay: false,\r\n        gameEnded:true,\r\n        elementsToHighlight: tie ? [] : winCondition.combination,\r\n        gameMessage: tie ? this.state.vocabulary[this.state.settings.lang].tieMessageTemplate : `${winCondition.winner} ${this.state.vocabulary[this.state.settings.lang].winMessage}`\r\n      }\r\n    },() => {\r\n      if(!tie && winCondition){\r\n        this.checkIfRecord({player:winCondition.winner,moves:this.state.moves});\r\n      }\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  switchStartPlayer = () => {\r\n    this.setState(() => {\r\n      let newStartPlayer = this.state.settings.altStartWith ? 'O' : 'X';\r\n      return{\r\n        startPlayer: newStartPlayer,\r\n      }\r\n    },() => {\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  switchTheme = () => {\r\n    this.setState(({theme}) => {\r\n      return {\r\n        theme: theme === 'light' ? 'dark' : 'light'\r\n      }\r\n    }, () => {\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  switchCurrentPlayer = () => {\r\n    this.setState(({currentPlayer}) => {\r\n      const nextPlayer = currentPlayer === 'X' ? 'O' : 'X';\r\n      return{\r\n        gameMessage: `${nextPlayer} ${this.state.vocabulary[this.state.settings.lang].playerMessageTemplate}`,\r\n        currentPlayer: nextPlayer\r\n      }\r\n    },() => {\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  setSoundValue = (e) => {\r\n    const target = e.target;\r\n    const name = target.name;\r\n    const type = target.type;\r\n    let newValue;\r\n    if(type === 'checkbox'){\r\n      newValue = e.target.checked ? 1 : 0;\r\n    } else {\r\n      newValue = parseFloat(target.value);\r\n    }\r\n    this.setState(()=>{\r\n      return{\r\n        [name]:newValue,\r\n      }\r\n    },()=>{\r\n      if(name==='effects'){\r\n        this.effectAudio.volume = this.state.effects;\r\n      }\r\n      if(name==='music'){\r\n        this.musicAudio.volume = this.state.music;\r\n      }\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  addAudio = () => {\r\n    this.effectAudio = new Audio(effect);\r\n    this.effectAudio.volume = this.state.effects;\r\n\r\n    this.musicAudio = new Audio(musicLink);\r\n    this.musicAudio.volume = this.state.music;\r\n    this.musicAudio.autoplay = true;\r\n    this.musicAudio.loop = true;\r\n    \r\n  }\r\n  changeSetting = (e) => {\r\n    this.setState(({settings}) => {\r\n      let newVal = e.target.checked;\r\n      if(e.target.name==='lang'){\r\n        newVal = e.target.checked ? 'ru' : 'en'\r\n      }\r\n      let newSettings = {...settings,[e.target.name]: newVal}\r\n      return {\r\n        settings:newSettings\r\n      }\r\n    },() => {\r\n      if(e.target.name === 'altStartWith' || e.target.name === 'withAI'){\r\n        this.resetGame();\r\n      }\r\n      if (e.target.name === 'altStartWith'){\r\n        this.switchStartPlayer();\r\n      }\r\n      if (e.target.name === 'altMode'){\r\n        this.switchTheme();\r\n      }\r\n      this.effectAudio.play();\r\n      this.updateLocalStorage();\r\n    })\r\n  }\r\n  \r\n  checkWinCondition = () => {\r\n    // source: https://reactjs.org/tutorial/tutorial.html#declaring-a-winner \r\n    const field = this.state.field; \r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (field[a] && field[a] === field[b] && field[a] === field[c]) {\r\n        return {\r\n          combination:[a, b, c],\r\n          winner: field[a]\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  render(){\r\n    const {activeSection, settings, field, hasSavedGame, gameMessage, gameEnded, elementsToHighlight, moves, theme, startedAutoplay, records, vocabulary, music, effects} = this.state;\r\n    const lang = this.state.settings.lang;\r\n    return (\r\n      <div className=\"app\" data-theme={theme}>\r\n        <Hotkeys vocabulary={vocabulary}\r\n            lang={lang}/>\r\n        <div className=\"app__body\">\r\n          <Menu\r\n            gameField={field}\r\n            updateField={this.updateField}\r\n            activeSection = {activeSection}\r\n            hasSavedGame = {hasSavedGame}\r\n            changeScreen={this.changeScreen}\r\n            settings={settings}\r\n            gameEnded={gameEnded}\r\n            elementsToHighlight={elementsToHighlight}\r\n            newGame={this.newGame}\r\n            autoplay={this.autoplay}\r\n            moves = {moves}\r\n            gameMessage = {gameMessage}\r\n            startedAutoplay = {startedAutoplay}\r\n            records={records}\r\n            vocabulary={vocabulary}\r\n            lang={lang}\r\n            music={music}\r\n            effects={effects}\r\n            setSoundValue={this.setSoundValue}\r\n            changeSetting={this.changeSetting}/>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}